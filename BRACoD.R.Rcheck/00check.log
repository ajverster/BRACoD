* using log directory ‘/home/averster/Documents/Bannoc/BRACoD/BRACoD.R.Rcheck’
* using R version 4.0.3 (2020-10-10)
* using platform: x86_64-pc-linux-gnu (64-bit)
* using session charset: UTF-8
* using option ‘--as-cran’
* checking for file ‘BRACoD.R/DESCRIPTION’ ... OK
* this is package ‘BRACoD.R’ version ‘0.0.0.9000’
* package encoding: UTF-8
* checking CRAN incoming feasibility ... NOTE
Maintainer: ‘Adrian Verster <adrian.verster@canada.ca>’

New submission

Version contains large components (0.0.0.9000)

Non-FOSS package license (use_mit_license())

The Description field should not start with the package name,
  'This package' or similar.
* checking package namespace information ... OK
* checking package dependencies ... OK
* checking if this is a source package ... OK
* checking if there is a namespace ... OK
* checking for executable files ... OK
* checking for hidden files and directories ... OK
* checking for portable file names ... OK
* checking for sufficient/correct file permissions ... OK
* checking whether package ‘BRACoD.R’ can be installed ... OK
* checking installed package size ... OK
* checking package directory ... OK
* checking for future file timestamps ... OK
* checking DESCRIPTION meta-information ... WARNING
Non-standard license specification:
  use_mit_license()
Standardizable: FALSE
* checking top-level files ... OK
* checking for left-over files ... OK
* checking index information ... OK
* checking package subdirectories ... OK
* checking R files for non-ASCII characters ... OK
* checking R files for syntax errors ... OK
* checking whether the package can be loaded ... OK
* checking whether the package can be loaded with stated dependencies ... OK
* checking whether the package can be unloaded cleanly ... OK
* checking whether the namespace can be loaded with stated dependencies ... OK
* checking whether the namespace can be unloaded cleanly ... OK
* checking loading without being on the library search path ... OK
* checking use of S3 registration ... OK
* checking dependencies in R code ... OK
* checking S3 generic/method consistency ... OK
* checking replacement functions ... OK
* checking foreign function calls ... OK
* checking R code for possible problems ... NOTE
File ‘BRACoD.R/R/BRACoD.R’:
  .onLoad calls:
    packageStartupMessage("Welcome to BRACoD. You need the python version of BRACoD for this to work. Use the function install_bracod() to install it.")

See section ‘Good practice’ in '?.onAttach'.
* checking Rd files ... OK
* checking Rd metadata ... OK
* checking Rd line widths ... OK
* checking Rd cross-references ... OK
* checking for missing documentation entries ... WARNING
Undocumented code objects:
  ‘obesity’
Undocumented data sets:
  ‘obesity’
All user-level objects in a package should have documentation entries.
See chapter ‘Writing R documentation files’ in the ‘Writing R
Extensions’ manual.
* checking for code/documentation mismatches ... WARNING
Codoc mismatches from documentation object 'run_bracod':
run_bracod
  Code: function(df_relab, env_var, n_sample = 1000, n_burn = 1000,
                 njobs = 4)
  Docs: function(df_relabl, env_var, n_sample = 1000, n_burn = 1000,
                 njobs = 4)
  Argument names in code not in docs:
    df_relab
  Argument names in docs not in code:
    df_relabl
  Mismatches in argument names:
    Position: 1 Code: df_relab Docs: df_relabl

Codoc mismatches from documentation object 'simulate_microbiome_counts':
simulate_microbiome_counts
  Code: function(df, n_contributors = 20, coeff_contributor = 0,
                 min_ab_contributor = -9, sd_Y = 1, n_reads = 1e+05,
                 var_contributor = 5, use_uniform = TRUE, n_samples_use
                 = NULL, corr_value = NULL, return_absolute = FALSE,
                 seed = NULL)
  Docs: function(df, n_contributors = 20, coeff_contributor = 0,
                 min_ab_contributor = -9, sd_Y = 1, n_reads = 1e+05,
                 var_contributor = 5, use_uniform = TRUE, n_samples_use
                 = NULL, corr_value = NULL, var_factor = NULL,
                 return_absolute = FALSE, seed = NULL)
  Argument names in docs not in code:
    var_factor
  Mismatches in argument names:
    Position: 11 Code: return_absolute Docs: var_factor
    Position: 12 Code: seed Docs: return_absolute

* checking Rd \usage sections ... WARNING
Undocumented arguments in documentation object 'install_bracod'
  ‘method’ ‘conda’

Undocumented arguments in documentation object 'run_bracod'
  ‘df_relabl’
Documented arguments not in \usage in documentation object 'run_bracod':
  ‘df’

Undocumented arguments in documentation object 'scale_counts'
  ‘df_counts’
Documented arguments not in \usage in documentation object 'scale_counts':
  ‘df’

Undocumented arguments in documentation object 'score'
  ‘bugs_identified’ ‘bugs_actual’

Undocumented arguments in documentation object 'simulate_microbiome_counts'
  ‘corr_value’ ‘var_factor’ ‘return_absolute’ ‘seed’

Functions with \usage entries need to have the appropriate \alias
entries, and all their arguments documented.
The \usage entries must correspond to syntactically valid R code.
See chapter ‘Writing R documentation files’ in the ‘Writing R
Extensions’ manual.
* checking Rd contents ... OK
* checking for unstated dependencies in examples ... OK
* checking contents of ‘data’ directory ... OK
* checking data for non-ASCII characters ... OK
* checking data for ASCII and uncompressed saves ... OK
* checking examples ... NONE
* checking PDF version of manual ... WARNING
LaTeX errors when creating PDF version.
This typically indicates Rd problems.
* checking PDF version of manual without hyperrefs or index ... ERROR
* checking for code which exercises the package ... WARNING
No examples, no tests, no vignettes
* checking for non-standard things in the check directory ... NOTE
Found the following files/directories:
  ‘BRACoD.R-manual.tex’
* checking for detritus in the temp directory ... OK
* DONE
Status: 1 ERROR, 6 WARNINGs, 3 NOTEs
